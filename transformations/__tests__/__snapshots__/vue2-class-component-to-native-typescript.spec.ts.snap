// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`removes vue-class-component 1`] = `
"import TestComponent1 from './TestComponent1/TestComponent1.vue';
import TestComponent2 from './TestComponent2/TestComponent2.vue';
import { ExampleType } from './ExampleType';

import { defineComponent, PropType } from \\"vue\\";

type ABC = { a: string };

export default defineComponent({
  name: \\"MyComponent\\",

  components: {
    TestComponent1,
    TestComponent2,
  },

  props: {
    // @Prop arrTypeSimpleDecorator?: ExampleType[];
    arrTypeSimpleDecorator: {
      type: Array as PropType<ExampleType[]>
    },

    // @Prop({ default: undefined }) undefinedDefault?: project;
    undefinedDefault: {
      type: Object as PropType<project>,
      default: () => undefined
    },

    // @Prop({ default: true }) propWithDefault!: ExampleType[];
    propWithDefault: {
      type: Array as PropType<ExampleType[]>,
      default: () => true
    },

    // @Prop() forcedString!: string;
    forcedString: {
      type: String
    },

    // @Prop({ default: 0 }) numberWithDefault!: number;
    numberWithDefault: {
      type: Number,
      default: () => 0
    },

    // @Prop({ required: true }) unionTypeRequired!: someType | null;
    unionTypeRequired: {
      type: Object as PropType<someType | null>,
      required: true
    },

    // @Prop({ type: Array, required: true }) arrayTypeRequired!: environment[]
    arrayTypeRequired: {
      type: Array as PropType<environment[]>,
      required: true
    },

    // @Prop({ required: true }) stringUnionRequired!: \\"project\\" | \\"environment\\";
    stringUnionRequired: {
      type: String,
      required: true
    },

    // @Prop({ required: true }) complexUnionRequired!: { b: 6 } | ABC;
    complexUnionRequired: {
      type: Object as PropType<{ b: 6 } | ABC>,
      required: true
    },

    // @Prop({ required: false, type: String, default: \\"+ ADD NEW\\" }) optionalStringWithDefault!: string;
    optionalStringWithDefault: {
      type: String,
      default: () => \\"+ ADD NEW\\"
    },

    validationProp: {
      type: String,
      default: () => \\"aggressive\\",

      validator(value: string): boolean {
          return [\\"aggressive\\", \\"passive\\"].indexOf(value) !== -1;
      }
    }
  },

  data: () => ({
    data1: true,
    nullable: null as string | null
  }),

  computed: {
    computed1(): boolean {
      return !!this.prop2;
    },

    someProp(): string {
      return someStore.someValue;
    }
  },

  watch: {
    prop1: {
      deep: true,
      immediate: true,

      handler() {
        console.log('Example watcher')
      }
    }
  },

  created() {
    console.log('created hook')
  },

  methods: {
    method1() {
      console.log('Example method')
    }
  }
});"
`;
